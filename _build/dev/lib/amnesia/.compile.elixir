v1.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Hooks.beam">>,
 'Elixir.Amnesia.Hooks',<<"lib/amnesia/hooks.ex">>,
 ['Elixir.Kernel'],
 [erlang,'Elixir.String','Elixir.Enum','Elixir.String.Chars'],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Fragment.Hash.beam">>,
 'Elixir.Amnesia.Fragment.Hash',<<"lib/amnesia/fragment/hash.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.Module','Elixir.Behaviour','Elixir.Kernel'],
 ['Elixir.Code'],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.TableExistsError.beam">>,
 'Elixir.Amnesia.TableExistsError',<<"lib/amnesia/exceptions.ex">>,
 [erlang,'Elixir.Exception','Elixir.Kernel.Typespec','Elixir.Kernel.Def',
  'Elixir.String','Elixir.Module','Elixir.Protocol','Elixir.Keyword',
  'Elixir.Map','Elixir.Kernel','Elixir.Amnesia.TableMissingError'],
 ['Elixir.String.Chars'],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Event.beam">>,
 'Elixir.Amnesia.Event',<<"lib/amnesia/event.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.Amnesia.Access','Elixir.Module',
  'Elixir.Kernel'],
 [erlang,'Elixir.Enum',mnesia],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Database.beam">>,
 'Elixir.Amnesia.Database',<<"lib/amnesia/database.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.Module','Elixir.Keyword','Elixir.Kernel'],
 [erlang,'Elixir.Amnesia.Table.Definition'],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Schema.beam">>,
 'Elixir.Amnesia.Schema',<<"lib/amnesia/schema.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.Module','Elixir.Kernel'],
 [erlang,mnesia],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.TableMissingError.beam">>,
 'Elixir.Amnesia.TableMissingError',<<"lib/amnesia/exceptions.ex">>,
 ['Elixir.Amnesia.TableExistsError',erlang,'Elixir.Exception',
  'Elixir.Kernel.Typespec','Elixir.Kernel.Def','Elixir.String',
  'Elixir.Module','Elixir.Protocol','Elixir.Keyword','Elixir.Map',
  'Elixir.Kernel'],
 ['Elixir.String.Chars'],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Selection.beam">>,
 'Elixir.Amnesia.Selection',<<"lib/amnesia/selection.ex">>,
 [erlang,'Elixir.Kernel.Typespec','Elixir.Module','Elixir.Protocol',
  'Elixir.Atom',lists,'Elixir.Kernel'],
 ['Elixir.Amnesia.Selection.Reference','Elixir.Amnesia.Selection.PID',
  'Elixir.Amnesia.Selection.Tuple','Elixir.Amnesia.Selection.List',
  'Elixir.Protocol.UndefinedError','Elixir.Amnesia.Selection.Function',
  'Elixir.Code','Elixir.Amnesia.Selection.Integer',
  'Elixir.Amnesia.Selection.Atom','Elixir.Amnesia.Selection.BitString',
  'Elixir.Amnesia.Selection.Port','Elixir.Amnesia.Selection.Float',
  'Elixir.Amnesia.Selection.Map'],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Metadata.beam">>,
 'Elixir.Amnesia.Metadata',<<"lib/amnesia/metadata.ex">>,
 [erlang,'Elixir.Kernel.Typespec','Elixir.Kernel.Def','Elixir.Module',
  'Elixir.List','Elixir.Protocol','Elixir.Keyword','Elixir.Kernel',
  'Elixir.ArgumentError'],
 [mnesia,'Elixir.Amnesia.Table'],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.beam">>,
 'Elixir.Amnesia',<<"lib/amnesia.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.String','Elixir.Module','Elixir.Kernel'],
 [erlang,mnesia,'Elixir.Amnesia.Database','Elixir.String.Chars'],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Selection.Atom.beam">>,
 'Elixir.Amnesia.Selection.Atom',<<"lib/amnesia/selection.ex">>,
 ['Elixir.Amnesia.Selection',erlang,'Elixir.Kernel.Typespec','Elixir.Module',
  'Elixir.Protocol','Elixir.Atom',lists,'Elixir.Kernel'],
 ['Elixir.Amnesia.Selection.Reference','Elixir.Amnesia.Selection.PID',
  'Elixir.Amnesia.Selection.Tuple','Elixir.Amnesia.Selection.List',
  'Elixir.Protocol.UndefinedError','Elixir.Amnesia.Selection.Function',
  'Elixir.Code','Elixir.Amnesia.Selection.Integer',
  'Elixir.Amnesia.Selection.BitString','Elixir.Amnesia.Selection.Port',
  'Elixir.Amnesia.Selection.Float','Elixir.Amnesia.Selection.Map'],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Access.beam">>,
 'Elixir.Amnesia.Access',<<"lib/amnesia/access.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.Module','Elixir.Behaviour','Elixir.Kernel'],
 [erlang,'Elixir.Access','Elixir.Code',mnesia],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Backup.beam">>,
 'Elixir.Amnesia.Backup',<<"lib/amnesia/backup.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.String','Elixir.Module','Elixir.Keyword',
  'Elixir.Behaviour','Elixir.Kernel'],
 [erlang,'Elixir.Access','Elixir.Code',mnesia],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Table.Definition.beam">>,
 'Elixir.Amnesia.Table.Definition',<<"lib/amnesia/table/definition.ex">>,
 ['Elixir.Module','Elixir.Kernel'],
 [erlang,'Elixir.String','Elixir.List','Elixir.Keyword','Elixir.Map',
  'Elixir.Access','Elixir.Enum','Elixir.String.Chars',
  'Elixir.Amnesia.Metadata','Elixir.ArgumentError'],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Selection.Amnesia.Table.Match.beam">>,
 'Elixir.Amnesia.Selection.Amnesia.Table.Match',
 <<"lib/amnesia/table/match.ex">>,
 ['Elixir.Amnesia.Selection',erlang,'Elixir.Kernel.Typespec',
  'Elixir.Kernel.Def','Elixir.Module','Elixir.Protocol','Elixir.Atom',
  'Elixir.Amnesia.Table.Match','Elixir.Kernel'],
 [],[],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Selection.Amnesia.Table.Select.beam">>,
 'Elixir.Amnesia.Selection.Amnesia.Table.Select',
 <<"lib/amnesia/table/select.ex">>,
 ['Elixir.Amnesia.Selection',erlang,'Elixir.Kernel.Typespec',
  'Elixir.Kernel.Def','Elixir.Module','Elixir.Protocol','Elixir.Atom',
  'Elixir.Kernel','Elixir.Amnesia.Table.Select'],
 [mnesia],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Table.Match.beam">>,
 'Elixir.Amnesia.Table.Match',<<"lib/amnesia/table/match.ex">>,
 ['Elixir.Amnesia.Selection',erlang,'Elixir.Kernel.Typespec',
  'Elixir.Kernel.Def','Elixir.Module','Elixir.Protocol','Elixir.Atom',
  'Elixir.Kernel'],
 [],[],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Table.Select.beam">>,
 'Elixir.Amnesia.Table.Select',<<"lib/amnesia/table/select.ex">>,
 ['Elixir.Amnesia.Selection',erlang,'Elixir.Kernel.Typespec',
  'Elixir.Kernel.Def','Elixir.Module','Elixir.Protocol','Elixir.Atom',
  'Elixir.Kernel'],
 [mnesia],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Mix.Amnesia.beam">>,
 'Elixir.Mix.Amnesia',<<"lib/mix/mix_amnesia.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.Module','Elixir.Amnesia.Metadata',
  'Elixir.Kernel'],
 [erlang,'Elixir.Mix.Task','Elixir.Mix','Elixir.Code','Elixir.String.Chars'],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Mix.Tasks.Amnesia.Drop.beam">>,
 'Elixir.Mix.Tasks.Amnesia.Drop',<<"lib/mix/amnesia.drop.ex">>,
 ['Elixir.Mix.Task','Elixir.Module','Elixir.Enum','Elixir.Mix.Amnesia',
  'Elixir.Kernel'],
 [erlang,'Elixir.Amnesia','Elixir.Access','Elixir.OptionParser',
  'Elixir.Amnesia.Schema'],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Mix.Tasks.Amnesia.Create.beam">>,
 'Elixir.Mix.Tasks.Amnesia.Create',<<"lib/mix/amnesia.create.ex">>,
 ['Elixir.Mix.Task','Elixir.Module','Elixir.Enum','Elixir.Mix.Amnesia',
  'Elixir.Kernel'],
 [erlang,'Elixir.Amnesia','Elixir.Mix','Elixir.Keyword','Elixir.Access',
  'Elixir.OptionParser','Elixir.Amnesia.Schema'],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Enumerable.Amnesia.Table.Stream.beam">>,
 'Elixir.Enumerable.Amnesia.Table.Stream',<<"lib/amnesia/table/stream.ex">>,
 ['Elixir.Enumerable',erlang,'Elixir.Amnesia.Table.Stream',
  'Elixir.Kernel.Typespec','Elixir.Kernel.Def','Elixir.Module',
  'Elixir.Protocol','Elixir.Atom','Elixir.Kernel'],
 ['Elixir.Keyword'],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Fragment.beam">>,
 'Elixir.Amnesia.Fragment',<<"lib/amnesia/fragment.ex">>,
 [erlang,'Elixir.Kernel.Typespec','Elixir.Amnesia.Access','Elixir.Amnesia',
  'Elixir.Module','Elixir.Keyword','Elixir.Amnesia.Table','Elixir.Kernel'],
 ['Elixir.Exception','Elixir.Access',mnesia,'Elixir.String.Chars',
  'Elixir.RuntimeError','Elixir.ArgumentError'],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Table.Stream.beam">>,
 'Elixir.Amnesia.Table.Stream',<<"lib/amnesia/table/stream.ex">>,
 ['Elixir.Enumerable',erlang,'Elixir.Kernel.Typespec','Elixir.Kernel.Def',
  'Elixir.Module','Elixir.Protocol','Elixir.Atom','Elixir.Kernel'],
 ['Elixir.Keyword'],
 [],nil}.
{<<"/Users/msd/Code/distributedBio/_build/dev/lib/amnesia/ebin/Elixir.Amnesia.Table.beam">>,
 'Elixir.Amnesia.Table',<<"lib/amnesia/table.ex">>,
 ['Elixir.Amnesia.Selection','Elixir.Kernel.Typespec','Elixir.Module',
  'Elixir.Keyword','Elixir.Kernel'],
 ['Elixir.Amnesia.TableExistsError',erlang,'Elixir.Amnesia.Table.Stream',
  'Elixir.Access','Elixir.Enum',mnesia,'Elixir.Amnesia.Table.Match',
  'Elixir.Amnesia.TableMissingError','Elixir.Amnesia.Table.Select'],
 [],nil}.
